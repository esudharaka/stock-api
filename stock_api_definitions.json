{
  "swagger": "2.0",
  "info": {
    "description": "This is the rest API Spec for Stock API. \n",
    "version": "1.0.0",
    "title": "Stock API"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Products",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "Filter the products by slug",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Product Creation Resonse",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a Product",
        "operationId": "createProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product Creation Resonse"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by Id",
        "operationId": "getProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A Product object",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a Product",
        "operationId": "updateProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product update Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by Id",
        "operationId": "delete product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          }
        }
      }
    },
    "/products/uploads": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Upload csv",
        "operationId": "uploadProducts",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The CSV file to upload.",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "202": {
            "description": "Accept file for async processing"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "brand": {
          "$ref": "#/definitions/Brand"
        }
      },
      "xml": {
        "name": "Product"
      }
    },
    "Brand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Brand"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}